{"version":3,"sources":["Assets/img/location.svg","Componets/Form.js","Componets/Header.jsx","Assets/img/cloud.svg","Assets/img/rain.svg","Assets/img/sun.svg","Assets/img/strom.svg","Componets/Weather.jsx","Componets/WeatherInfo.jsx","App.js","index.js"],"names":["Form","props","options","value","label","customStyles","option","provided","state","color","isFocused","isSelected","backgroundColor","menu","provide","width","valueContainer","padding","fontSize","lineHeight","borderRadius","control","border","cursor","boxShadow","cityForm","className","onSubmit","handleSubmitCity","classNamePrefix","onChange","handleChange","onInputChange","hasValue","placeholder","styles","onClick","setCityForm","Header","dataInfo","city","src","locationSvg","alt","id","type","name","defaultChecked","handleChangeMetric","htmlFor","Weather","weatherImg","img","cloud","rain","sun","storm","Math","round","temp","description","WeatherInfo","speed","pressure","humidity","clouds","App","useState","setDataInfo","setCity","searchCity","setSearchCity","selectUnits","setSelectUnits","getWeather","useCallback","a","axios","get","api","data","main","weather","wind","all","useEffect","event","preventDefault","metric","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39ecfd07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/location.2dfb72ad.svg\";","import React from 'react';\r\nimport Select from \"react-select\";\r\n\r\nconst Form = (props) => {\r\n  const options = [\r\n    {value: 'Москва', label: 'Москва'},\r\n    {value: 'Санкт-Петербург', label: 'Санкт-Петербург'},\r\n    {value: 'Новосибирск', label: 'Новосибирск'},\r\n    {value: 'Екатеринбург', label: 'Екатеринбург'},\r\n    {value: 'Казань', label: 'Казань'},\r\n    {value: 'Нижний Новгород', label: 'Нижний Новгород'},\r\n    {value: 'Челябинск', label: 'Челябинск'},\r\n    {value: 'Самара', label: 'Самара'},\r\n    {value: 'Омск', label: 'Омск'},\r\n    {value: 'Ростов-на-Дону', label: 'Ростов-на-Дону'},\r\n    {value: 'Уфа', label: 'Уфа'},\r\n    {value: 'Красноярск', label: 'Красноярск'},\r\n    {value: 'Воронеж', label: 'Воронеж'},\r\n    {value: 'Пермь', label: 'Пермь'},\r\n    {value: 'Краснодар', label: 'Краснодар'},\r\n  ]\r\n\r\n  const customStyles = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      color: state.isFocused ? 'black' : 'black' && state.isSelected ? 'white' : 'black',\r\n      backgroundColor: state.isFocused ? '#e0f2ff' : 'white' && state.isSelected ? '#498CEC' : 'white'\r\n    }),\r\n    menu: (provide) => ({\r\n      ...provide,\r\n      width: 566,\r\n\r\n    }),\r\n    valueContainer: (provide) => ({\r\n      ...provide,\r\n      padding: '26px 30px',\r\n      fontSize: '30px',\r\n      lineHeight: '36px',\r\n      borderRadius:'8px',\r\n    }),\r\n    control: (provided) => ({\r\n      ...provided,\r\n      width: 492,\r\n      backgroundColor: '#ecf3f7',\r\n      border: 'none',\r\n      cursor: 'pointer',\r\n      boxShadow: 'none'\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      { props.cityForm ?\r\n        <form className=\"location__change-city-form\" onSubmit={props.handleSubmitCity}>\r\n          <div>\r\n            <Select classNamePrefix=\"react-select\" onChange={props.handleChange} onInputChange={''} hasValue={true} options={options} placeholder=\"Введите город\"  styles={customStyles}/>\r\n            <button onClick={()=> props.setCityForm(false)}>OK</button>\r\n          </div>\r\n        </form>\r\n        :\r\n        <form className=\"location__change-city-form-dis\" onSubmit={props.handleSubmitCity}>\r\n          <div>\r\n            <Select classNamePrefix=\"react-select\" onChange={props.handleChange} onInputChange={''} hasValue={true} options={options} placeholder=\"Введите город\"  styles={customStyles}/>\r\n            <button onClick={()=> props.setCityForm(false)}>OK</button>\r\n          </div>\r\n        </form>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport locationSvg from \"../Assets/img/location.svg\";\r\nimport Form from \"./Form\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"location\">\r\n        <h1 className=\"location__city\">{props.dataInfo.city}</h1>\r\n        <button className=\"location__change-button location__change-button_city\" onClick={()=> props.setCityForm(true)}>Сменить город</button>\r\n        <button className=\"location__change-button location__change-button_location\">\r\n          <img src={locationSvg} alt=\"icon location\"/>\r\n          Мое местоположение\r\n        </button>\r\n        <Form\r\n          cityForm={props.cityForm}\r\n          setCityForm={props.setCityForm}\r\n          handleChange={props.handleChange}\r\n          handleSubmitCity={props.handleSubmitCity}\r\n        />\r\n      </div>\r\n      <div className=\"units\" >\r\n        <span className=\"units__span\">º</span>\r\n        <form className=\"units__group\">\r\n          <div className=\"units__group-btn units__group-btn-c\">\r\n            <input  id=\"1\" type=\"radio\" name=\"radio\" value=\"metric\" defaultChecked onChange={props.handleChangeMetric}/>\r\n            <label htmlFor=\"1\">C</label>\r\n          </div>\r\n          <div className=\"units__group-btn units__group-btn-f\">\r\n            <input id=\"2\"  type=\"radio\" name=\"radio\" value=\"imperial\" onChange={props.handleChangeMetric}/>\r\n            <label htmlFor=\"2\">F</label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/cloud.537bf324.svg\";","export default __webpack_public_path__ + \"static/media/rain.0b103200.svg\";","export default __webpack_public_path__ + \"static/media/sun.9647b3c9.svg\";","export default __webpack_public_path__ + \"static/media/strom.8596a268.svg\";","import React from 'react';\r\n\r\nimport cloud from \"../Assets/img/cloud.svg\";\r\nimport rain from \"../Assets/img/rain.svg\";\r\nimport sun from \"../Assets/img/sun.svg\";\r\nimport storm from \"../Assets/img/strom.svg\";\r\n\r\nconst Weather = (props) => {\r\n  let weatherImg ;\r\n  switch (props.dataInfo.img) {\r\n    case \"Clouds\":\r\n      weatherImg = cloud;\r\n      break;\r\n    case 'Rain':\r\n      weatherImg = rain;\r\n      break;\r\n    case \"Clear\":\r\n      weatherImg = sun;\r\n      break;\r\n    case \"Thunderstorm\":\r\n      weatherImg = storm;\r\n      break;\r\n    default:\r\n      weatherImg = cloud;\r\n  }\r\n  return (\r\n    <div className=\"weather\">\r\n      <div className=\"weather__temp\">\r\n        <img src={weatherImg} alt=\"sun\"/>\r\n        <span>{Math.round(props.dataInfo.temp)}º</span>\r\n      </div>\r\n      <div className=\"weather__status\">{props.dataInfo.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;","import React from 'react';\r\n\r\nconst WeatherInfo = ({dataInfo}) => {\r\n  return (\r\n    <div className=\"weather-info\">\r\n      <div className=\"weather-info__block block_1\">\r\n        <div className=\"weather-info__title\">Ветер</div>\r\n        <div className=\"weather-info__text\">{Math.round(dataInfo.speed * 10) / 10 } м/c</div>\r\n      </div>\r\n      <div className=\"weather-info__block block_2\">\r\n        <div  className=\"weather-info__title\">Давление</div>\r\n        <div className=\"weather-info__text\">{dataInfo.pressure} мм рт. ст.</div>\r\n      </div>\r\n      <div className=\"weather-info__block block_3\">\r\n        <div className=\"weather-info__title\">Влажность</div>\r\n        <div className=\"weather-info__text\">{dataInfo.humidity}%</div>\r\n      </div>\r\n      <div className=\"weather-info__block block_4\">\r\n        <div className=\"weather-info__title\">Облачность</div>\r\n        <div className=\"weather-info__text\">{dataInfo.clouds}%</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;","import React, {useCallback, useEffect, useState} from 'react';\n\nimport './styles.sass';\n\nimport Header from './Componets/Header'\nimport Weather from \"./Componets/Weather\";\nimport WeatherInfo from \"./Componets/WeatherInfo\";\n\nimport axios from \"axios\";\n\n\nconst API_KEY = '9d6ae69e04c6d15a751792e0e2638c2d';\n\nfunction App() {\n\n  const [dataInfo, setDataInfo] = useState({\n    city: '',\n    temp: '',\n    description: '',\n    speed: '',\n    pressure: '',\n    humidity: '',\n    clouds: '',\n    img: '',\n  });\n\n  const [city, setCity] = useState('Moscow');\n  const [searchCity, setSearchCity] = useState('Moscow');\n  const [cityForm, setCityForm] = useState(false);\n  const [selectUnits, setSelectUnits] = useState('metric');\n\n  const  getWeather = useCallback( async ()=> {\n     const api = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru&appid=${API_KEY}&units=${selectUnits}`)\n     const data = await api.data;\n     setDataInfo({\n       city: data.name,\n       temp: data.main.temp,\n       description: data.weather[0].description,\n       speed: data.wind.speed,\n       pressure: data.main.pressure,\n       humidity: data.main.humidity,\n       clouds: data.clouds.all,\n       img: data.weather[0].main\n     })\n     return data\n\n } ,[city, selectUnits])\n\n  useEffect(  () => {\n    getWeather()\n  },[getWeather])\n\n\n  const handleSubmitCity = (event)=> {\n    event.preventDefault()\n    setCity(searchCity);\n  }\n\n  const handleChange = event => {\n    const city = event.value\n    setSearchCity(city);\n  }\n\n  const handleChangeMetric = (event) => {\n    const metric = event.target.value;\n    setSelectUnits(metric)\n  }\n\n\n\n  return (\n    <div className=\"wrapper\">\n      <Header\n        dataInfo={dataInfo}\n        setCityForm={setCityForm}\n        cityForm={cityForm}\n        handleChange={handleChange}\n        handleSubmitCity={handleSubmitCity}\n        handleChangeMetric={handleChangeMetric}\n      />\n      <Weather\n        dataInfo={dataInfo}\n      />\n     <WeatherInfo\n       dataInfo={dataInfo}\n     />\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}